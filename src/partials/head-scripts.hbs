{{#if (eq env.FORCE_HTTPS 'true')}}
  <script>(function(l,p){if(l.protocol!==p)l.protocol=p})(location,'https:')</script>
{{/if}}
<!-- {{#with site.keys.googleAnalytics}}
    <script>function gtag(){dataLayer.push(arguments)};window.dataLayer=window.dataLayer||[];gtag('js',new Date());gtag('config','{{this}}')</script>
    {{/with}}
    {{#if env.OPTANON_SCRIPT_URL}} -->
<!--      jquery is also loaded in the footer, don't load it twice.-->
      <!-- <script src="{{uiRootPath}}/js/vendor/jquery.js"></script> -->
      <script src="{{env.OPTANON_SCRIPT_URL}}"></script>
      <script>function OptanonWrapper(){}</script>
    {{/if}}
    <!-- {{#if site.keys.googleAnalytics}}
      <script>(window.dataLayer=window.dataLayer||[]).push({'gtm.start':+new Date(),event:'gtm.js'})</script>
      <script async src="https://www.googletagmanager.com/gtm.js?id={{site.keys.googleAnalytics}}"></script>
    {{/if}} -->
    <script>var uiRootPath = '{{{uiRootPath}}}'</script>
    <script src="https://unpkg.com/accordion-js@3.3.1/dist/accordion.min.js"></script>
    <script src="https://thoughtspot.github.io/js/index.js"></script>
    <!--<script src="https://thoughtspotscripts.ngrok.io/public/algolia/dist/algolia_search.bundled.js"></script>-->
    <script src="https://scripts.thoughtspot.com/algolia_search.bundled.js"></script>

    <script>
      let initialized = false;
      async function initializeAlgolia() {
        if (initialized) return;
        initialized = true;

        const searchElement = document.querySelector('#algolia-search');
        document.body.classList.add('algolia_docs')
        searchElement.classList.add('algolia_docs')

        const pathParams = window.location.pathname.split('/').filter(Boolean)

        let deployment = ['software', 'cloud'].indexOf(pathParams[0]) > -1 ? pathParams[0] : null
        let version = pathParams[1] ? pathParams[1] : null

        let filters = {docs: {}}

        if (deployment) {
          filters.docs.deployment = deployment
        }

        if (version) {
          filters.docs.version = version
        }

        // FULL SCREEN
        const fullScreenSearchWrapper = document.createElement('div')
        const fullScreenSearchContainer = document.createElement('div')
        fullScreenSearchWrapper.classList.add('full_screen_search_wrapper')
        fullScreenSearchWrapper.style.display = 'none'
        fullScreenSearchContainer.classList.add('full_screen_search')
        fullScreenSearchContainer.classList.add('algolia_search_wrapper')
        document.body.appendChild(fullScreenSearchWrapper)
        fullScreenSearchWrapper.appendChild(fullScreenSearchContainer)

        const fullScreenAlgoliaSearch = await new window.AlgoliaSearchComponent(fullScreenSearchContainer, {
          inline: false,
          firstResults: 'docs',
          onCloseButton: () => {
            fullScreenSearchWrapper.style.display = 'none'
            document.body.classList.remove('full_screen_search_open')
          }
        });

        // INLINE
        const algoliaSearch = await new window.AlgoliaSearchComponent(searchElement, {
          inline: true,
          filters: filters,
          addClass: 'header_algolia_search',
          firstResults: 'docs',
          viewMoreFunction: (section, searchValue, instance) => {
            fullScreenSearchWrapper.style.display = 'block';
            fullScreenAlgoliaSearch.setQuery(searchValue)
            fullScreenAlgoliaSearch.viewMoreFilter(section)
            document.body.classList.add('full_screen_search_open')
            // instance.api.closeSearchResults()

            // Key is refinement list class name. Value is value of element to click
            fullScreenAlgoliaSearch.selectFilters({
              deployment: _.get(filters, 'docs.deployment'),
              docs_version: _.get(filters, 'docs.version')
            })
          }
        });

        // BODY
        if (window.location.pathname == '/home/') {
          const bodySearchWrapper = document.createElement('div')
          bodySearchWrapper.classList.add('algolia_search_wrapper')

          document.querySelector('#preamble').prepend(bodySearchWrapper)

          const bodyAlgoliaSearch = await new window.AlgoliaSearchComponent(bodySearchWrapper, {
            inline: true,
            filters: filters,
            firstResults: 'docs',
            viewMoreFunction: (section, searchValue, instance) => {
              fullScreenSearchWrapper.style.display = 'block';
              fullScreenAlgoliaSearch.setQuery(searchValue)
              fullScreenAlgoliaSearch.viewMoreFilter(section)
              document.body.classList.add('full_screen_search_open')
              instance.api.closeSearchResults()

              // Key is refinement list class name. Value is value of element to click
              fullScreenAlgoliaSearch.selectFilters({
                deployment: _.get(filters, 'docs.deployment'),
                docs_version: _.get(filters, 'docs.version')
              })
            }
          });
        }

      }

      function awaitAlgolia() {
        if (window.AlgoliaSearchComponent) {
          initializeAlgolia();
        } else {
          window.addEventListener('algoliaReady', initializeAlgolia);
        }
      }

      if (document.readyState === 'complete') {
        awaitAlgolia()
      } else {
          document.addEventListener("DOMContentLoaded", awaitAlgolia);
      }

    </script>
      <!--  <script>var vanillaModal = new VanillaModal.default()</script> -->
      <!--  <script>const modal = new VanillaModal(options);</script> -->
          <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
              <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
              {{!-- <script src="https://cdn.sitesearch360.com/v13/sitesearch360-v13.min.js" async></script> --}}
    <script src="https://thoughtspot.github.io/js/index.js"></script>
