{"version":3,"sources":["../src/popover.js"],"names":["NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","CLASS_PREFIX","BSCLS_PREFIX_REGEX","RegExp","Default","_extends","Tooltip","placement","trigger","content","template","DefaultType","Event","HIDE","HIDDEN","SHOW","SHOWN","INSERTED","CLICK","FOCUSIN","FOCUSOUT","MOUSEENTER","MOUSELEAVE","Popover","isWithContent","this","getTitle","_getContent","addAttachmentClass","attachment","getTipElement","addClass","tip","config","setContent","$tip","setElementContent","find","call","element","removeClass","CLASS_NAME_FADE","getAttribute","_cleanTipClass","tabClass","attr","match","length","join","_jQueryInterface","each","data","_config","test","TypeError","Constructor","noConflict"],"mappings":"ywBAgBA,IAAMA,EAAO,UAEPC,EAAW,aACXC,EAAS,IAAOD,EAChBE,EAAqBC,EAAAA,QAAEC,GAAGL,GAC1BM,EAAe,aACfC,EAAqB,IAAIC,OAAJ,UAAqBF,EAArB,OAAyC,KAE9DG,EAAOC,EAAA,GACRC,EAAAA,QAAQF,QADA,CAEXG,UAAW,QACXC,QAAS,QACTC,QAAS,GACTC,SAAU,wIAMNC,EAAWN,EAAA,GACZC,EAAAA,QAAQK,YADI,CAEfF,QAAS,8BASLG,EAAQ,CACZC,KAAI,OAAShB,EACbiB,OAAM,SAAWjB,EACjBkB,KAAI,OAASlB,EACbmB,MAAK,QAAUnB,EACfoB,SAAQ,WAAapB,EACrBqB,MAAK,QAAUrB,EACfsB,QAAO,UAAYtB,EACnBuB,SAAQ,WAAavB,EACrBwB,WAAU,aAAexB,EACzByB,WAAU,aAAezB,GASrB0B,EAAAA,SAAAA,G,wKAiCJC,cAAA,WACE,OAAOC,KAAKC,YAAcD,KAAKE,e,EAGjCC,mBAAA,SAAmBC,GACjB9B,EAAAA,QAAE0B,KAAKK,iBAAiBC,SAAY9B,EAApC,IAAoD4B,I,EAGtDC,cAAA,WAEE,OADAL,KAAKO,IAAMP,KAAKO,KAAOjC,EAAAA,QAAE0B,KAAKQ,OAAOvB,UAAU,GACxCe,KAAKO,K,EAGdE,WAAA,WACE,IAAMC,EAAOpC,EAAAA,QAAE0B,KAAKK,iBAGpBL,KAAKW,kBAAkBD,EAAKE,KAxET,mBAwE+BZ,KAAKC,YACvD,IAAIjB,EAAUgB,KAAKE,cACI,mBAAZlB,IACTA,EAAUA,EAAQ6B,KAAKb,KAAKc,UAG9Bd,KAAKW,kBAAkBD,EAAKE,KA7EP,iBA6E+B5B,GAEpD0B,EAAKK,YAAeC,c,EAKtBd,YAAA,WACE,OAAOF,KAAKc,QAAQG,aAAa,iBAC/BjB,KAAKQ,OAAOxB,S,EAGhBkC,eAAA,WACE,IAAMR,EAAOpC,EAAAA,QAAE0B,KAAKK,iBACdc,EAAWT,EAAKU,KAAK,SAASC,MAAM5C,GACzB,OAAb0C,GAAuC,EAAlBA,EAASG,QAChCZ,EAAKK,YAAYI,EAASI,KAAK,M,EAM5BC,iBAAP,SAAwBhB,GACtB,OAAOR,KAAKyB,KAAK,WACf,IAAIC,EAAOpD,EAAAA,QAAE0B,MAAM0B,KAAKvD,GAClBwD,EAA4B,iBAAXnB,EAAsBA,EAAS,KAEtD,IAAKkB,IAAQ,eAAeE,KAAKpB,MAI5BkB,IACHA,EAAO,IAAI5B,EAAQE,KAAM2B,GACzBrD,EAAAA,QAAE0B,MAAM0B,KAAKvD,EAAUuD,IAGH,iBAAXlB,GAAqB,CAC9B,QAA4B,IAAjBkB,EAAKlB,GACd,MAAM,IAAIqB,UAAJ,oBAAkCrB,EAAlC,KAGRkB,EAAKlB,S,qCA7FT,MApDY,U,8BAwDZ,OAAO7B,I,2BAIP,OAAOT,I,+BAIP,OAAOC,I,4BAIP,OAAOgB,I,gCAIP,OAAOf,I,kCAIP,OAAOc,M,sCA5BLY,CAAgBjB,EAAAA,S,OA6GtBP,EAAAA,QAAEC,GAAGL,GAAQ4B,EAAQ0B,iBACrBlD,EAAAA,QAAEC,GAAGL,GAAM4D,YAAchC,EACzBxB,EAAAA,QAAEC,GAAGL,GAAM6D,WAAa,WAEtB,OADAzD,EAAAA,QAAEC,GAAGL,GAAQG,EACNyB,EAAQ0B,kB","file":"js/vendor/popover.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'popover'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.popover'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst CLASS_PREFIX = 'bs-popover'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div></div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(string|element|function)'\n}\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement())\n\n    // We use append for html objects to maintain js events\n    this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this.element)\n    }\n\n    this.setElementContent($tip.find(SELECTOR_CONTENT), content)\n\n    $tip.removeClass(`${CLASS_NAME_FADE} ${CLASS_NAME_SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Popover(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n"]}